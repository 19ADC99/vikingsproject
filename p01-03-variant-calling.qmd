# Variant Calling

```{css, echo=FALSE}

pre {
  max-height: 300px;
}

div.sourceCode {
  overflow: scroll;
}

.bash-code {
  font-style: italic;
}


```


```{r, echo=FALSE, include=FALSE}
# load required libraries
up_packages = c("circlize", "clusterProfiler", "ComplexHeatmap", "DT", "ggplot2", "grid", "gridExtra", "magrittr",
                 "RColorBrewer", "org.Sc.sgd.db")
lapply(up_packages, require, character.only = TRUE)

# set working directory
mainDir = "/home/andrea/19ADC99/vikingsproject"
knitr::opts_knit$set(root.dir = mainDir)

```


## On this page

Biological insights and take-home messages are at the bottom of the page at section Lesson Learnt: @sec-lesson-learnt-feature-selection.

* Here


## Variant Calling

We will now analyse the DNA variants between the sequenced farmhouse yeasts and the reference _S. cerevisiae_ lab strain S288C. Genetic variants will be combined with information from the 151 yeast strains sequenced in Gallone et al 2019 used to reconstruct (kveiks) population structures, levels of heterozygosities, putative regions with Loss Of Heterozygosity (LOH) and the eventual genes affected by LOH.


### Reads alignment

Here the steps are the standard I always do:

- align reads to reference genome with bwa mem;
- sort the bam file by read position;
- mark reads duplicates with what used to be picard tools;
- assign read groups, so that each sequencing library is assigned to the right sample (necessary for when I merge the vcf files)


```{bash, eval=FALSE}
## align reads to reference genome S288C
# align reads
DB=~/00_Brigida_starting_files/variants/Saccharomyces_cerevisiae.EF4.73.dna.chromosome.all.fa

while read line; do

  bwa mem -t 72 \
    -K 100000000 \
    $DB \
    ../00_trim_reads/$line.R1.tr.fq.gz \
    ../00_trim_reads/$line.R2.tr.fq.gz \
    > $line.S288C.align.sam;
    
  samtools view \
    -@ 72 \
    -Sb \
    $line.S288C.align.sam \
    > $line.S288C.align.bam;
  
  samtools sort \
    -@ 72 \
    $line.S288C.align.bam $line.S288C.align.sort;
  
  rm $line.S288C.align.sam $line.S288C.align.bam;

done < ../sample.lst

## mark duplicates
for file in *.bam; do
  ~/bin/gatk-4.0.11.0/gatk MarkDuplicates \
    --INPUT=$file \
    --OUTPUT=$(basename $file .bam).md.bam \
    --METRICS_FILE=$(basename $file .bam).md.log \
    --CREATE_INDEX=true;
done

# assign read group
while read line; do
  ~/bin/gatk-4.0.11.0/gatk AddOrReplaceReadGroups \
    --INPUT $line.S288C.align.sort.md.bam \
    --OUTPUT $line.S288C.align.sort.md.r.bam \
    --RGID $line \
    --RGPL $line \
    --RGLB $line \
    --RGPU $line \
    --RGSM $line;
done < ../sample.lst
```


### Variant Calling

I run HaplotypeCaller in gVCF mode, sample ploidy 2 and calling all the kveiks positions at the same time to reduce the number of false positives.

```{bash, eval=FALSE}
## run haplotype caller
DB=~/00_Brigida_starting_files/variants/Saccharomyces_cerevisiae.EF4.73.dna.chromosome.all.fa

for i in chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16; do
  java -Xmx8g \
    -jar ~/bin/GenomeAnalysisTK-3.3-0-g37228af/GenomeAnalysisTK.jar \
    --logging_level INFO \
    --num_threads 4 \
    --analysis_type UnifiedGenotyper \
    --reference_sequence $DB \
    -I bam_files.list \
    -o S288C.variants.$i.gvcf \
    --intervals Saccharomyces_cerevisiae.EF4.73.dna.chromosome.$i.interval_list \
    --standard_min_confidence_threshold_for_calling 20 \
    -stand_emit_conf 30.0 \
    --min_base_quality_score 20 \
    -glm BOTH \
    --sample_ploidy 2 \
    --validation_strictness SILENT \
    --output_mode EMIT_ALL_SITES &
done

# merge kveiks with with brigida's chromosomes
for i in chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16; do
  bcftools merge \
    --threads 4 \
    --output-type z \
    --output all_plusKV.$i.vcf.gz \
    kveiks.S288C.variants.$i.gvcf.gz \
    ../03_Bri_chr/Scer.$i.raw.vcf.gz &
done

# merge all chromosomes together
bcftools concat \
  all_plusKV.chr1.vcf.gz \
  all_plusKV.chr2.vcf.gz \
  all_plusKV.chr3.vcf.gz \
  all_plusKV.chr4.vcf.gz \
  all_plusKV.chr5.vcf.gz \
  all_plusKV.chr6.vcf.gz \
  all_plusKV.chr7.vcf.gz \
  all_plusKV.chr8.vcf.gz \
  all_plusKV.chr9.vcf.gz \
  all_plusKV.chr10.vcf.gz \
  all_plusKV.chr11.vcf.gz \
  all_plusKV.chr12.vcf.gz \
  all_plusKV.chr13.vcf.gz \
  all_plusKV.chr14.vcf.gz \
  all_plusKV.chr15.vcf.gz \
  all_plusKV.chr16.vcf.gz \
  --output-type z \
  --output all_plusKV.vcf.gz \
  --threads 64

```


### Variant filtering and convert to plink bed input

Here I filter for SNPs that are informative for Population Structure analysis.
What I do:

- apply hard filters to flag low quality positions;
- select biallelic and high frequency SNPs, SNPs in linkage disequilibrium.

Here I select biallelic SNPs and filter out minor allele frequency. Then I merge my vcf file with the vcf files from your dataset. After, I just invoke plink for generate the input files for FastStructure

```{bash, eval=FALSE}
# hard filter low quality variants
java -jar ~/bin/GenomeAnalysisTK-3.3-0-g37228af/GenomeAnalysisTK.jar \
  --analysis_type VariantFiltration \
  --variant all_plusKV.vcf.gz \
  --out all_plusKV.fltr.vcf \
  --reference_sequence $DB \
  --filterExpression "QD < 2.0" --filterName "QD_Low" \
  --filterExpression "MQ < 40.0" --filterName "MQ_Low" \
  --filterExpression "GQ < 30" --filterName "GQ_Low" \
  --filterExpression "AD < 5" --filterName "AD_Low"

# select biallelic loci, filter for MAF and linkage disequilibrium
~/bin/plink_linux_x86_64_20181202/plink \
  --make-bed \
  --double-id \
  --allow-extra-chr \
  --indep-pairwise 50 5 0.5 \
  --maf 0.05 \
  --biallelic-only \
  --geno 0.25 \
  --vcf all_plusKV.fltr.vcf.gz \
  --out all_plusKV.fltr.bi
  
```


## Farmhouse yeasts heterozygosity


Farmhouse yeasts contains a high degree of Heterozygosity, comparable to yeast strains from the "mixed" Clade.

```{r, fig.cap="Heterozygosity of yeasts from different clades", warning=FALSE, message=FALSE}
# import dataset
kveik = read.delim(paste(mainDir, "all_plusKV.heterozygous.positions.txt", sep = ""), header = TRUE)

# sort 
kveik$Pop = factor(
  kveik$Pop,
  levels = c("Farmhouse", "Asian", "Beer1", "Beer2", "Bread",
             "Mixed", "Mosaic", "Sake", "Wild", "Wine")
)

# prepare count labels
stat_box_data <- function(y) {
  return( 
    data.frame(
      y = 6,
      #sign =tests1[which(tests1$group2 == y),]$p.signif,
      label = paste('n =', length(y))
    )
  )
}

# plot
ggplot(kveik, aes(x = Pop, y = HET_CT)) +
  geom_point(position = position_jitter(width = 0.25),
             shape = 21, fill = "grey50", 
             alpha = 0.25) +
  geom_boxplot(fill = NA, outlier.shape = NA) +
  geom_vline(xintercept = 1.5) +
  stat_summary(fun.data = stat_box_data, geom = "text", hjust = 0.5, vjust = 0.9) +
  stat_compare_means(method = "anova", label.y = 0.01) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "Farmhouse") +
  scale_y_log10(labels = scales::comma, limits = c(1, 1300000)) +
  labs(title = "Heterozygosity in yeast populations",
       x = "Populations",
       y = "log10 heterozygous positions") +
  theme(plot.title = element_text(hjust = 0.5, size = 24),
        axis.text.x = element_text(hjust = 0.95, angle = 30, size = 16),
        axis.text.y = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.position = "none",
        panel.background = element_rect(colour = "black", fill = NA),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(colour = "grey75"),
        panel.grid.minor.y = element_blank())

# plot
ggplot(kveik, aes(x = Pop, y = HET_CT)) +
  geom_point(shape = "-", size = 3.5) +
  geom_boxplot(fill = "grey95", alpha = 0.75, width = 0.25,
               position = position_nudge(x = -0.2),
               outlier.colour = NA) +
  ggdist::stat_halfeye(fill = "grey95", alpha = 0.75, slab_color = "grey45", slab_size = 0.25, 
                       adjust = 5, justification = -0.05, .width = 0, point_colour = NA) +
  geom_vline(xintercept = 1.5) +
  stat_summary(fun.data = stat_box_data, geom = "text", hjust = 0.5, vjust = 0.9) +
  stat_compare_means(method = "anova", label.y = 0.01) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "Farmhouse") +
  scale_y_log10(labels = scales::comma, limits = c(1, 1300000)) +
  labs(title = "Heterozygosity in yeast populations",
       x = "Populations",
       y = "log10 heterozygous positions") +
  theme(plot.title = element_text(hjust = 0.5, size = 24),
        axis.text.x = element_text(hjust = 0.95, angle = 30, size = 16),
        axis.text.y = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.position = "none",
        panel.background = element_rect(colour = "black", fill = NA),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(colour = "grey75"),
        panel.grid.minor.y = element_blank())
```



















```{r}


# load libraries
library("dplyr")
library("ggplot2")
library("ggpubr")
library("grid")
library("gridExtra")
library("plyr")
library("RColorBrewer")


# change working directory
setwd("/home/Andrea/Desktop/kveiks/")


# import dataset
kveik = read.delim("all_plusKV.heterozygous.positions.txt", header = TRUE)


# sort 
kveik$Pop = factor(
  kveik$Pop,
  levels = c("Farmhouse", "Asian", "Beer1", "Beer2", "Bread",
             "Mixed", "Mosaic", "Sake", "Wild", "Wine")
)
kveik$Pop = relevel(kveik$Pop, "Farmhouse")

# t-test
tests = ggpubr::compare_means(HET_CT ~ Pop, data = kveik,
                              #ref.group = "Farmhouse",
                              method = "anova")

# prepare count labels
stat_box_data <- function(y) {
  return( 
    data.frame(
      y = 6,
      #sign =tests1[which(tests1$group2 == y),]$p.signif,
      label = paste('n =', length(y))
    )
  )
}

# open printing file
pdf(file = "all_plusKV.heterozygous.positions.pdf",
    width = 12,
    height = 8)

# plot
ggplot(kveik, aes(x = Pop, y = HET_CT)) +
  geom_point(position = position_jitter(width = 0.25),
             shape = 21, fill = "grey50", 
             alpha = 0.25) +
  geom_boxplot(fill = NA, outlier.shape = NA) +
  geom_vline(xintercept = 1.5) +
  geom_vline(xintercept = 2.5, color = "grey75") +
  geom_vline(xintercept = 3.5, color = "grey75") +
  geom_vline(xintercept = 4.5, color = "grey75") +
  geom_vline(xintercept = 5.5, color = "grey75") +
  geom_vline(xintercept = 6.5, color = "grey75") +
  geom_vline(xintercept = 7.5, color = "grey75") +
  geom_vline(xintercept = 8.5, color = "grey75") +
  geom_vline(xintercept = 9.5, color = "grey75") +
  geom_vline(xintercept = 10.5, color = "grey75") +
  geom_vline(xintercept = 11.5, color = "grey75") +
  geom_vline(xintercept = 12.5, color = "grey75") +
  stat_summary(fun.data = stat_box_data, geom = "text",
               hjust = 0.5, vjust = 0.9) +
  annotate("text", x = 2,  y = 1290000, label = c(tests$p.signif)[[1]]) +
  annotate("text", x = 3,  y = 1290000, label = c(tests$p.signif)[[2]]) +
  annotate("text", x = 4,  y = 1290000, label = c(tests$p.signif)[[3]]) +
  annotate("text", x = 5,  y = 1290000, label = c(tests$p.signif)[[4]]) +
  annotate("text", x = 6,  y = 1290000, label = c(tests$p.signif)[[5]]) +
  annotate("text", x = 7,  y = 1290000, label = c(tests$p.signif)[[6]]) +
  annotate("text", x = 8,  y = 1290000, label = c(tests$p.signif)[[7]]) +
  annotate("text", x = 9,  y = 1290000, label = c(tests$p.signif)[[8]]) +
  annotate("text", x = 10,  y = 1290000, label = c(tests$p.signif)[[9]]) +
  scale_y_log10(labels = scales::comma,
                limits = c(1, 1300000)) +
  labs(title = "Heterozygosity in yeast populations",
       x = "Populations",
       y = "log10 heterozygous positions") +
  theme(plot.title = element_text(hjust = 0.5, size = 24),
        axis.text.x = element_text(hjust = 0.95, angle = 30, size = 16),
        axis.text.y = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.position = "none",
        panel.background = element_rect(colour = "black", fill = NA),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(colour = "grey75"),
        panel.grid.minor.y = element_blank())


# plot
ggplot(kveik, aes(x = Pop, y = HET_CT)) +
  geom_point(shape = "-", size = 3.5) +
  geom_boxplot(fill = "grey95", alpha = 0.75, width = 0.25,
               position = position_nudge(x = -0.2),
               outlier.colour = NA) +
  ggdist::stat_halfeye(fill = "grey95", alpha = 0.75, slab_color = "grey45", slab_size = 0.25, 
                       adjust = 5, justification = -0.05, .width = 0, point_colour = NA) +
  geom_vline(xintercept = 1.5) +
  stat_summary(fun.data = stat_box_data, geom = "text",
               hjust = 0.5, vjust = 0.9) +
  annotate("text", x = 2,  y = 1290000, label = c(tests$p.signif)[[1]]) +
  annotate("text", x = 3,  y = 1290000, label = c(tests$p.signif)[[2]]) +
  annotate("text", x = 4,  y = 1290000, label = c(tests$p.signif)[[3]]) +
  annotate("text", x = 5,  y = 1290000, label = c(tests$p.signif)[[4]]) +
  annotate("text", x = 6,  y = 1290000, label = c(tests$p.signif)[[5]]) +
  annotate("text", x = 7,  y = 1290000, label = c(tests$p.signif)[[6]]) +
  annotate("text", x = 8,  y = 1290000, label = c(tests$p.signif)[[7]]) +
  annotate("text", x = 9,  y = 1290000, label = c(tests$p.signif)[[8]]) +
  annotate("text", x = 10,  y = 1290000, label = c(tests$p.signif)[[9]]) +
  scale_y_log10(labels = scales::comma,
                limits = c(1, 1300000)) +
  labs(title = "Heterozygosity in yeast populations",
       x = "Populations",
       y = "log10 heterozygous positions") +
  theme(plot.title = element_text(hjust = 0.5, size = 24),
        axis.text.x = element_text(hjust = 0.95, angle = 30, size = 16),
        axis.text.y = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.position = "none",
        panel.background = element_rect(colour = "black", fill = NA),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(colour = "grey75"),
        panel.grid.minor.y = element_blank())



########## GRAPHS WITHOUT STAT TAHT IS BROKEN
########## SEE https://github.com/kassambara/ggpubr/issues/572

# plot
ggplot(kveik, aes(x = Pop, y = HET_CT)) +
  geom_point(aes(fill = Pop),
             position = position_jitter(width = 0.25),
             shape = 21, 
             alpha = 0.375,
             size = 3) +
  geom_boxplot(fill = NA, outlier.shape = NA) +
  geom_vline(xintercept = 1.5) +
  scale_fill_manual(values = c("#20E0E3", "#DD4C65", "#61CF4F", "#2998E5", "#F3C200",
                               "#CC09BB", "#050505", "#911EB4", "#F032E6", "#BCF60C")) +
  stat_summary(fun.data = stat_box_data, geom = "text",
               hjust = 0.5, vjust = -50) +
  scale_y_continuous(labels = scales::comma,
                     limits = c(1, 100000)) +
  labs(title = "Heterozygosity in yeast populations",
       x = "Populations",
       y = "# heterozygous positions") +
  theme(plot.title = element_text(hjust = 0.5, size = 24),
        axis.text.x = element_text(hjust = 0.95, angle = 30, size = 16),
        axis.text.y = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.position = "none",
        panel.background = element_rect(colour = "black", fill = NA),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(colour = "grey75"),
        panel.grid.minor.y = element_blank())




# plot
kveik_comp = kveik[which(kveik$Pop == "Farmhouse" & kveik$Subpopulation != "Beer1"), ]
kveik_comp$Subpopulation = "All Farmhouse"
kveik_comp = rbind(kveik_comp, kveik[which(kveik$Pop == "Farmhouse" & kveik$Subpopulation != "Beer1"), ])

ggplot(kveik_comp, aes(x = Subpopulation, y = HET_CT)) +
  geom_point(aes(fill = Subpopulation),
             position = position_jitter(width = 0.25),
             shape = 21, 
             alpha = 0.375,
             size = 3) +
  geom_boxplot(fill = NA, outlier.shape = NA) +
  geom_vline(xintercept = 1.5) +
  scale_fill_manual(values = c("#20E0E3", "#FFDA00", "#0571B0", "#92C5DE", "#A6611A", "#909090")) +
  scale_y_continuous(labels = scales::comma,
                limits = c(1, 100000)) +
  stat_summary(fun.data = stat_box_data, geom = "text",
               hjust = 0.5, vjust = -50) +
  labs(title = "Heterozygosity in Farmhouse yeasts subpopulations",
       x = "Subpopulations",
       y = "# heterozygous positions") +
  theme(plot.title = element_text(hjust = 0.5, size = 24),
        axis.text.x = element_text(hjust = 0.95, angle = 30, size = 16),
        axis.text.y = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.position = "none",
        panel.background = element_rect(colour = "black", fill = NA),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(colour = "grey75"),
        panel.grid.minor.y = element_blank())

#
kveik_comp2 = kveik[which(kveik$Pop == "Farmhouse" & kveik$Subpopulation != "Beer1"), ]
kveik_comp2$Subpopulation = "All Farmhouse"
kveik_comp2 = rbind(kveik_comp2, kveik)
kveik_comp2$Subpopulation = factor(
  kveik_comp2$Subpopulation,
  levels = c("All Farmhouse",
             "Baltic", "Gong", "Kveik", "Russian", "Wild",
             "Beer1", "Beer2", "Mixed", "Mosaic", "Others")
)

ggplot(kveik_comp2, aes(x = Subpopulation, y = HET_CT)) +
  geom_point(aes(fill = Subpopulation),
             position = position_jitter(width = 0.25),
             shape = 21, 
             alpha = 0.375,
             size = 3) +
  geom_boxplot(fill = NA, outlier.shape = NA) +
  geom_vline(xintercept = 1.5) +
  geom_vline(xintercept = 6.5) +
  scale_y_continuous(labels = scales::comma,
                     limits = c(1, 100000)) +
  scale_fill_manual(values = c("#20E0E3",
                               "#FFDA00", "#0571B0", "#92C5DE", "#A6611A", "#909090",
                               "#61CF4F", "#CC09BB", "#050505", "salmon")) +
  stat_summary(fun.data = stat_box_data, geom = "text",
               hjust = 0.5, vjust = -50) +
  labs(title = "Heterozygosity in Farmhouse yeasts subpopulations",
       x = "Subpopulations",
       y = "# heterozygous positions") +
  theme(plot.title = element_text(hjust = 0.5, size = 24),
        axis.text.x = element_text(hjust = 0.95, angle = 30, size = 16),
        axis.text.y = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.position = "none",
        panel.background = element_rect(colour = "black", fill = NA),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(colour = "grey75"),
        panel.grid.minor.y = element_blank())



```






## LOH



## CULTURE 28 HYBRID



## Lessons Learnt {#sec-lesson-learnt-feature-selection}

Based on the  we have learnt:

* Fr


## Session Information

:::{.callout-note collapse=true}

```{r, echo=FALSE}
utils::sessionInfo()
```

:::